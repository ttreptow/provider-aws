/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// Hack to avoid import errors during build...
var (
	_ = &metav1.Time{}
)

// +kubebuilder:skipversion
type CSVInput struct {
	Comments *string `json:"comments,omitempty"`

	FieldDelimiter *string `json:"fieldDelimiter,omitempty"`

	QuoteCharacter *string `json:"quoteCharacter,omitempty"`

	QuoteEscapeCharacter *string `json:"quoteEscapeCharacter,omitempty"`

	RecordDelimiter *string `json:"recordDelimiter,omitempty"`
}

// +kubebuilder:skipversion
type CSVOutput struct {
	FieldDelimiter *string `json:"fieldDelimiter,omitempty"`

	QuoteCharacter *string `json:"quoteCharacter,omitempty"`

	QuoteEscapeCharacter *string `json:"quoteEscapeCharacter,omitempty"`

	RecordDelimiter *string `json:"recordDelimiter,omitempty"`
}

// +kubebuilder:skipversion
type DataRetrievalRule struct {
	Strategy *string `json:"strategy,omitempty"`
}

// +kubebuilder:skipversion
type DescribeVaultOutput struct {
	CreationDate *string `json:"creationDate,omitempty"`

	LastInventoryDate *string `json:"lastInventoryDate,omitempty"`

	NumberOfArchives *int64 `json:"numberOfArchives,omitempty"`

	SizeInBytes *int64 `json:"sizeInBytes,omitempty"`

	VaultARN *string `json:"vaultARN,omitempty"`

	VaultName *string `json:"vaultName,omitempty"`
}

// +kubebuilder:skipversion
type Encryption struct {
	KMSContext *string `json:"kmsContext,omitempty"`

	KMSKeyID *string `json:"kmsKeyID,omitempty"`
}

// +kubebuilder:skipversion
type Grantee struct {
	DisplayName *string `json:"displayName,omitempty"`

	EmailAddress *string `json:"emailAddress,omitempty"`

	ID *string `json:"id,omitempty"`

	URI *string `json:"uRI,omitempty"`
}

// +kubebuilder:skipversion
type InventoryRetrievalJobDescription struct {
	Format *string `json:"format,omitempty"`

	Limit *string `json:"limit,omitempty"`

	Marker *string `json:"marker,omitempty"`
}

// +kubebuilder:skipversion
type InventoryRetrievalJobInput struct {
	EndDate *string `json:"endDate,omitempty"`

	Limit *string `json:"limit,omitempty"`

	Marker *string `json:"marker,omitempty"`

	StartDate *string `json:"startDate,omitempty"`
}

// +kubebuilder:skipversion
type JobParameters struct {
	ArchiveID *string `json:"archiveID,omitempty"`

	Description *string `json:"description,omitempty"`

	Format *string `json:"format,omitempty"`

	RetrievalByteRange *string `json:"retrievalByteRange,omitempty"`

	SNSTopic *string `json:"snsTopic,omitempty"`

	Tier *string `json:"tier,omitempty"`

	Type *string `json:"type_,omitempty"`
}

// +kubebuilder:skipversion
type PartListElement struct {
	RangeInBytes *string `json:"rangeInBytes,omitempty"`

	SHA256TreeHash *string `json:"sha256TreeHash,omitempty"`
}

// +kubebuilder:skipversion
type ProvisionedCapacityDescription struct {
	CapacityID *string `json:"capacityID,omitempty"`

	ExpirationDate *string `json:"expirationDate,omitempty"`

	StartDate *string `json:"startDate,omitempty"`
}

// +kubebuilder:skipversion
type S3Location struct {
	BucketName *string `json:"bucketName,omitempty"`

	Prefix *string `json:"prefix,omitempty"`
}

// +kubebuilder:skipversion
type SelectParameters struct {
	Expression *string `json:"expression,omitempty"`
}

// +kubebuilder:skipversion
type UploadListElement struct {
	ArchiveDescription *string `json:"archiveDescription,omitempty"`

	CreationDate *string `json:"creationDate,omitempty"`

	MultipartUploadID *string `json:"multipartUploadID,omitempty"`

	PartSizeInBytes *int64 `json:"partSizeInBytes,omitempty"`

	VaultARN *string `json:"vaultARN,omitempty"`
}

// +kubebuilder:skipversion
type VaultAccessPolicy struct {
	Policy *string `json:"policy,omitempty"`
}

// +kubebuilder:skipversion
type VaultLockPolicy struct {
	Policy *string `json:"policy,omitempty"`
}

// +kubebuilder:skipversion
type VaultNotificationConfig struct {
	SNSTopic *string `json:"snsTopic,omitempty"`
}
